version: "3.9"

services:
  traefik-v3.2:
    image: "traefik:v3.2"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8000"
      - "--serverstransport.maxidleconnsperhost=100000"
      - "--experimental.fastProxy"
    ports:
      - "8000:8000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  nginx:
    image: nginx:alpine
    ports:
      - "8001:8001"
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./whoami.conf:/etc/nginx/conf.d/whoami.conf:ro"
  haproxy:
    image: haproxy:2.8
    ports:
      - "8002:8002"
    volumes:
      - "./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro"

  whoami-1:
    image: "containous/whoami"
    ports:
      - "8003:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.go-benchmark.rule=Host(`benchmark.whoami`)"
      - "traefik.http.services.go-benchmark.loadbalancer.server.port=80"
  whoami-2:
    image: "containous/whoami"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.go-benchmark.rule=Host(`benchmark.whoami`)"
      - "traefik.http.services.go-benchmark.loadbalancer.server.port=80"

  whoami-3:
    image: "containous/whoami"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.go-benchmark.rule=Host(`benchmark.whoami`)"
      - "traefik.http.services.go-benchmark.loadbalancer.server.port=80"


  whoami-4:
    image: "containous/whoami"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.go-benchmark.rule=Host(`benchmark.whoami`)"
      - "traefik.http.services.go-benchmark.loadbalancer.server.port=80"